{"ast":null,"code":"export default function validate(input) {\n  let errors = {};\n  if (!input.name) {\n    errors.name = \"Name is required\";\n  } else if (!/^[A-Za-z\\s]+$/.test(input.name)) {\n    errors.name = 'Name can only contain letters';\n  } else if (input.name.length < 6) {\n    errors.name = 'min 5 characters allowed';\n  } else if (input.name.length > 21) {\n    errors.name = 'max 20 characters allowed';\n  } else if (!input.difficulty) {\n    errors.difficulty = \"Dificulty is required\";\n  } else if (!input.duration) {\n    errors.duration = \"Please select duration\";\n  } else if (!input.season) {\n    errors.season = \"Please select season\";\n  } else if (!input.countries.length) {\n    errors.countries = \"Please select countries\";\n  }\n  return errors;\n}\n\n// Solo letras --> /^[A-Za-z]+$/\n// Solo letras y espacios /^[A-Za-z\\s]+$/ \n// letras y espacios opcion2: /^[A-Za-z ]+$/\n\n// ^[a-zA-ZÀ-ÿ\\u00f1\\u00d1\\s]+$/","map":{"version":3,"names":["validate","input","errors","name","test","length","difficulty","duration","season","countries"],"sources":["/home/juan77/SoftwareDeveloper/VSCode_Project-React/PI-Countries-main/client/src/utils/validate.js"],"sourcesContent":["export  default function validate(input) {\n    let errors = {};\n      if(!input.name){\n        errors.name =\"Name is required\";\n\n    }else if(! /^[A-Za-z\\s]+$/.test(input.name)){\n       errors.name = 'Name can only contain letters';\n\n    }else if(input.name.length < 6  ){\n      errors.name = 'min 5 characters allowed';\n    }\n\n    else if( input.name.length > 21){\n      errors.name = 'max 20 characters allowed';\n    }\n\n\n    else if(!input.difficulty){\n      errors.difficulty =\"Dificulty is required\"\n\n    } \n    \n    else if(!input.duration){\n      errors.duration =\"Please select duration\"\n\n    } \n    \n    else if(!input.season){\n      errors.season =\"Please select season\"\n\n    } \n\n    else if(!input.countries.length){\n      errors.countries =\"Please select countries\"\n\n    } \n    \n    return errors;\n  }\n\n // Solo letras --> /^[A-Za-z]+$/\n // Solo letras y espacios /^[A-Za-z\\s]+$/ \n // letras y espacios opcion2: /^[A-Za-z ]+$/\n\n// ^[a-zA-ZÀ-ÿ\\u00f1\\u00d1\\s]+$/\n"],"mappings":"AAAA,eAAgB,SAASA,QAAQA,CAACC,KAAK,EAAE;EACrC,IAAIC,MAAM,GAAG,CAAC,CAAC;EACb,IAAG,CAACD,KAAK,CAACE,IAAI,EAAC;IACbD,MAAM,CAACC,IAAI,GAAE,kBAAkB;EAEnC,CAAC,MAAK,IAAG,CAAE,eAAe,CAACC,IAAI,CAACH,KAAK,CAACE,IAAI,CAAC,EAAC;IACzCD,MAAM,CAACC,IAAI,GAAG,+BAA+B;EAEhD,CAAC,MAAK,IAAGF,KAAK,CAACE,IAAI,CAACE,MAAM,GAAG,CAAC,EAAG;IAC/BH,MAAM,CAACC,IAAI,GAAG,0BAA0B;EAC1C,CAAC,MAEI,IAAIF,KAAK,CAACE,IAAI,CAACE,MAAM,GAAG,EAAE,EAAC;IAC9BH,MAAM,CAACC,IAAI,GAAG,2BAA2B;EAC3C,CAAC,MAGI,IAAG,CAACF,KAAK,CAACK,UAAU,EAAC;IACxBJ,MAAM,CAACI,UAAU,GAAE,uBAAuB;EAE5C,CAAC,MAEI,IAAG,CAACL,KAAK,CAACM,QAAQ,EAAC;IACtBL,MAAM,CAACK,QAAQ,GAAE,wBAAwB;EAE3C,CAAC,MAEI,IAAG,CAACN,KAAK,CAACO,MAAM,EAAC;IACpBN,MAAM,CAACM,MAAM,GAAE,sBAAsB;EAEvC,CAAC,MAEI,IAAG,CAACP,KAAK,CAACQ,SAAS,CAACJ,MAAM,EAAC;IAC9BH,MAAM,CAACO,SAAS,GAAE,yBAAyB;EAE7C;EAEA,OAAOP,MAAM;AACf;;AAED;AACA;AACA;;AAED"},"metadata":{},"sourceType":"module"}