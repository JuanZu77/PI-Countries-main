{"ast":null,"code":"var _jsxFileName = \"/home/juan77/SoftwareDeveloper/VSCode_Project-React/PI-Countries-main/client/src/components/Pagination/Pagination.jsx\";\nimport React from \"react\";\nimport style from '../Pagination/Pagination.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pagination(_ref) {\n  let {\n    allCountry,\n    countriesPerPage,\n    paying,\n    currentPage,\n    setCurrentPage\n  } = _ref;\n  const numberpage = [];\n\n  //Divio la cantidad total de paises por el nro de paises por pagina y pusheamos 10 por pagina\n  for (var i = 1; i <= Math.ceil(allCountry / countriesPerPage); i++) {\n    numberpage.push(i);\n    //console.log(i)\n  }\n  //debo retornas el componente(nav). Generamos todas las paginas (map) y cada li va a ser un boton (onClick) a traves del voy a acceder a la pagina clickeada\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: style.paginado,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: style.paginado,\n      children: numberpage && numberpage.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: style.buttonPag,\n          onClick: () => paying(number),\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 6\n        }, this)\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 2\n  }, this);\n}\n_c = Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","style","jsxDEV","_jsxDEV","Pagination","_ref","allCountry","countriesPerPage","paying","currentPage","setCurrentPage","numberpage","i","Math","ceil","push","className","paginado","children","map","number","buttonPag","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/juan77/SoftwareDeveloper/VSCode_Project-React/PI-Countries-main/client/src/components/Pagination/Pagination.jsx"],"sourcesContent":["\nimport React from \"react\";\n\nimport style from '../Pagination/Pagination.module.css';\n\nexport default function Pagination ({allCountry,countriesPerPage, paying, currentPage, setCurrentPage}){\n    \n\tconst numberpage=[];\n\t\n\n\t//Divio la cantidad total de paises por el nro de paises por pagina y pusheamos 10 por pagina\n\tfor(var i=1; i<=Math.ceil(allCountry/countriesPerPage); i++){\n\t\tnumberpage.push(i);\n\t\t//console.log(i)\n\t}\n    //debo retornas el componente(nav). Generamos todas las paginas (map) y cada li va a ser un boton (onClick) a traves del voy a acceder a la pagina clickeada\n\treturn (\n\t<nav className={style.paginado}>\n\t\t<ul className={style.paginado}>\n\t\t\t{numberpage &&\n\t\t\t\tnumberpage.map(number=>(\n\t\t\t\t\t<li key={number}>\n\t\t\t\t\t<button className={style.buttonPag} \n\t\t\t\t\tonClick={() => paying(number)}>{number}</button>\n\t\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t</nav>\n\t)\n}"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,KAAK,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAAqE;EAAA,IAAnE;IAACC,UAAU;IAACC,gBAAgB;IAAEC,MAAM;IAAEC,WAAW;IAAEC;EAAc,CAAC,GAAAL,IAAA;EAErG,MAAMM,UAAU,GAAC,EAAE;;EAGnB;EACA,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,IAAEC,IAAI,CAACC,IAAI,CAACR,UAAU,GAACC,gBAAgB,CAAC,EAAEK,CAAC,EAAE,EAAC;IAC3DD,UAAU,CAACI,IAAI,CAACH,CAAC,CAAC;IAClB;EACD;EACG;EACH,oBACAT,OAAA;IAAKa,SAAS,EAAEf,KAAK,CAACgB,QAAS;IAAAC,QAAA,eAC9Bf,OAAA;MAAIa,SAAS,EAAEf,KAAK,CAACgB,QAAS;MAAAC,QAAA,EAC5BP,UAAU,IACVA,UAAU,CAACQ,GAAG,CAACC,MAAM,iBACpBjB,OAAA;QAAAe,QAAA,eACAf,OAAA;UAAQa,SAAS,EAAEf,KAAK,CAACoB,SAAU;UACnCC,OAAO,EAAEA,CAAA,KAAMd,MAAM,CAACY,MAAM,CAAE;UAAAF,QAAA,EAAEE;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC,GAFvCN,MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEP;AAACC,EAAA,GAxBuBvB,UAAU;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}